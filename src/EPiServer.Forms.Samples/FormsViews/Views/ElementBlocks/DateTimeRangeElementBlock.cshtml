
@using EPiServer.Core
@using EPiServer.ServiceLocation
@using EPiServer.Shell.Web.Mvc.Html;
@using EPiServer.Forms.Core
@using EPiServer.Web;
@using EPiServer.Forms.Core.Models
@using EPiServer.Forms.Helpers.Internal
@using EPiServer.Forms.Samples.Implementation.Elements
@using EPiServer.Forms.Samples.EditView

@model DateTimeRangeElementBlock

@{
    var formElement = Model.FormElement;
    var defaultValue = Model.GetDateTimeDefaultValue();
    var values = !string.IsNullOrEmpty(defaultValue) ? defaultValue.Split('|') : null;
    var startValue = (values != null && values.Length > 0) ? values[0] : null;
    var endValue = (values != null && values.Length > 1) ? values[1] : null;
    var placeHolders = !string.IsNullOrEmpty(Model.PlaceHolder) ? Model.PlaceHolder.Split('|') : null;
    var startPlaceHolder = (placeHolders != null && placeHolders.Length > 0) ? placeHolders[0] : null;
    var endPlaceHolder = (placeHolders != null && placeHolders.Length > 1) ? placeHolders[1] : null;
    var start_id = formElement.Guid + "_start";
    var end_id = formElement.Guid + "_end";

    var errorMessage = Model.GetErrorMessage();

    var currentMode = ServiceLocator.Current.GetInstance<IContextModeResolver>().CurrentMode;
}

<fieldset class="Form__Element Form__CustomElement FormDateTimeRange @Model.GetValidationCssClasses()" data-epiforms-element-name="@formElement.ElementName">
    <legend class="Form__Element__Caption">@Model.Label</legend>

    <label for="@start_id" class="Form__Element__Caption visually-hidden">@Html.Translate("/contenttypes/datetimerangeelementblock/start")</label>
    <input name="@formElement.ElementName" id="@start_id" type="text" class="Form__CustomInput FormDateTimeRange__Start"
           placeholder="@(string.IsNullOrWhiteSpace(startPlaceHolder)?"":startPlaceHolder)"
           value="@startValue" @Html.Raw(Model.AttributesString) data-f-datainput/>
    <span class="FormDateTimeRange_Seperator">:</span>
    <label for="@end_id" class="Form__Element__Caption visually-hidden">@Html.Translate("/contenttypes/datetimerangeelementblock/end")</label>
    <input name="@formElement.ElementName" id="@end_id" type="text" class="Form__CustomInput FormDateTimeRange__End"
           placeholder="@(string.IsNullOrWhiteSpace(endPlaceHolder)?"":endPlaceHolder)"
           value="@endValue" @Html.Raw(Model.AttributesString) data-f-datainput/>
    <span role="alert" aria-live="polite" data-epiforms-linked-name="@formElement.ElementName" class="Form__Element__ValidationError" style="@(string.IsNullOrEmpty(errorMessage) ? " display:none;" : "")">@errorMessage</span>

    @{
        if (currentMode != ContextMode.Edit)
        {
            // push this Element information to a global blob. Then Samples.js will init them all at once.
            var pickerType = ((DateTimePickerType)Model.PickerType).ToString().ToLower();
            <script type="text/javascript">
                var __SamplesDateTimeElements = __SamplesDateTimeElements || [];
                __SamplesDateTimeElements.push({
                    guid: "@start_id",
                    pickerType: "@pickerType"
                },
                {
                    guid: "@end_id",
                    pickerType: "@pickerType"
                });
            </script>
        }
    }
</fieldset>
